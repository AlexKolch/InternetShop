//
//  ItemDetailsViewController.swift
//  InternetShop
//
//  Created by Алексей Колыченков on 24.04.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ItemDetailsDisplayLogic: AnyObject {
    func displayShowDetails (viewModel: ItemDetails.ShowDetails.ViewModel)
}

class ItemDetailsViewController: UIViewController, ItemDetailsDisplayLogic {

    var interactor: ItemDetailsBusinessLogic?
    var router: (NSObjectProtocol & ItemDetailsRoutingLogic & ItemDetailsDataPassing)?

    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = ItemDetailsInteractor()
        let presenter = ItemDetailsPresenter()
        let router = ItemDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing


    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        doShowDetails()
    }


    func doShowDetails() {
        let request = ItemDetails.ShowDetails.Request.RequestType.getDetails
        interactor?.doShowDetails(request: request)
    }

    func displayShowDetails (viewModel: ItemDetails.ShowDetails.ViewModel) {

    }

}
